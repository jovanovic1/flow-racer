%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 044c6937c7ef4c2da3345b440a6fa8dc, type: 3}
  m_Name: SetupAccount
  m_EditorClassIdentifier: 
  text: 'import FungibleToken from 0x9a0766d93b6608b7 import ExampleToken from 0x0fb46f70bfa68d94
    import MetadataViews from 0x631e88ae7f1d7c20 import NonFungibleToken from 0x631e88ae7f1d7c20   
    transaction () {     prepare(signer: AuthAccount) {         // Return early if
    the account already stores a ExampleToken Vault         if signer.borrow<&ExampleToken.Vault>(from:
    ExampleToken.VaultStoragePath) != nil {                      } else {            
    log("Create a new ExampleToken Vault and put it in storage")             // Create
    a new ExampleToken Vault and put it in storage             signer.save(                
    <-ExampleToken.createEmptyVault(),                 to: ExampleToken.VaultStoragePath            
    )              // Create a public capability to the Vault that only exposes            
    // the deposit function through the Receiver interface             signer.link<&ExampleToken.Vault{FungibleToken.Receiver}>(                
    ExampleToken.ReceiverPublicPath,                 target: ExampleToken.VaultStoragePath            
    )              // Create a public capability to the Vault that exposes the Balance
    and Resolver interfaces             signer.link<&ExampleToken.Vault{FungibleToken.Balance,
    MetadataViews.Resolver}>(                 ExampleToken.VaultPublicPath,                
    target: ExampleToken.VaultStoragePath             )              // Create a
    public capability to the Vault that only exposes             // the deposit function
    through the Receiver interface             signer.link<&ExampleToken.Vault{FungibleToken.Provider}>(                
    ExampleToken.VaultPublicPath,                 target: ExampleToken.VaultStoragePath            
    )         }       } }  '
